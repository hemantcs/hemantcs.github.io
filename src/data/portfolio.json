{
    "title": "Portfolio",
    "items": [
        {
            "title": "Elastic Image Recognition as a Service",
            "description": "<strong>Elastic Image Recognition as a Service built using AWS public cloud services like EC2, SQS, and S3.</strong>",
            "ulist": [
                "Developed Elastic (automatically scales out and in based on demand) Image Recognition Service using AWS services like EC2, SQS, and S3.",
                "Incorporated Microservice architecture so that components are loosely coupled and independently scalable.",
                "Improved service resiliency by developing a load-generator to test auto-scaling and to stress test the system."
            ],
            "timeline": "Spring 21",
            "technologies": [
                {
                    "title": "AWS EC2",
                    "url": "https://aws.amazon.com/ec2/"
                },
                {
                    "title": "AWS SQS",
                    "url": "https://aws.amazon.com/sqs/"
                },
                {
                    "title": "AWS S3",
                    "url": "https://aws.amazon.com/s3/"
                },
                {
                    "title": "Java",
                    "url": "https://www.java.com/en/"
                },
                {
                    "title": "Java Servlet",
                    "url": "https://en.wikipedia.org/wiki/Jakarta_Servlet"
                },
                {
                    "title": "Apache Tomcat",
                    "url": "http://tomcat.apache.org/"
                },
                {
                    "title": "PyTorch",
                    "url": "https://pytorch.org/"
                },
                {
                    "title": "Python",
                    "url": "https://www.python.org/"
                }
            ]
        },
        {
            "title": "Grocery List To Nutrients Insight",
            "description": "<strong>An Elastic Cloud Native Application developed using Google Cloud Platform like App Engine, Cloud SQL, Cloud Run, and Cloud Pub/Sub.</strong>",
            "ulist": [
                "Developed a multi-tenant grocery list management app using Google Cloud Platform services to enable users to meet their nutrients goals and promote healthy eating.",
                "Created a Serverless NLP Microservice to perform entity extraction from the grocery item.",
                "Implemented REST API endpoints and used these to develop both Web UI and Android app.",
                "Improved usability of the app by developing an easy-to-use interactive dashboard for nutrients insight."
            ],
            "timeline": "Spring 21",
            "technologies": [
                {
                    "title": "Google App Engine",
                    "url": "https://cloud.google.com/appengine"
                },
                {
                    "title": "Google Pub/Sub",
                    "url": "https://cloud.google.com/pubsub"
                },
                {
                    "title": "Google Cloud SQL",
                    "url": "https://cloud.google.com/sql"
                },
                {
                    "title": "Google Cloud Run",
                    "url": "https://cloud.google.com/run"
                },
                {
                    "title": "Java",
                    "url": "https://www.java.com/en/"
                },
                {
                    "title": "Java Servlet",
                    "url": "https://en.wikipedia.org/wiki/Jakarta_Servlet"
                },
                {
                    "title": "REST API",
                    "url": "https://en.wikipedia.org/wiki/Representational_state_transfer"
                },
                {
                    "title": "Python",
                    "url": "https://www.python.org/"
                },
                {
                    "title": "Android API",
                    "url": "https://developer.android.com/reference"
                },
                {
                    "title": "Android Studio",
                    "url": "https://developer.android.com/studio"
                }
            ]
        },
        {
            "title": "Clinical Semantic Text Similarity - Natural Language Processing",
            "description": "<strong>Bidirectional Encoder Representations from Transformers (BERT) based implementation for Clinical Semantic Text Similarity <a href='https://n2c2.dbmi.hms.harvard.edu/track1'>challenge</a>.</strong>",
            "ulist": [
                "Developed a Neural Network model based on BERT to compute a semantic similarity score between pair of sentences from clinical notes",
                "Developed Cosine similarity and Linear Regression based similarity score computation layer",
                "Applied Transfer Learning to improve model performance (by 2.71%) as the task dataset was inadequate",
                "Implemented back translation and rule-based data augmentation to help model learn clinical domain knowledge and further improve model performance (by 1.27%)",
                "Achieved a Pearson Correlation Coefficient of 0.8851 just 0.0159 lower than the current state-of-the-art method which needs much more resources to train the model"
            ],
            "timeline": "Fall 20",
            "technologies": [
                {
                    "title": "BERT Language Model",
                    "url": "https://en.wikipedia.org/wiki/BERT_(language_model)"
                },
                {
                    "title": "Hugging Face Transformers",
                    "url": "https://github.com/huggingface/transformers"
                },
                {
                    "title": "PyTorch",
                    "url": "https://pytorch.org/"
                },
                {
                    "title": "Python",
                    "url": "https://www.python.org/"
                },
                {
                    "title": "Pandas",
                    "url": "https://pandas.pydata.org/"
                },
                {
                    "title": "matplotlib",
                    "url": "https://matplotlib.org/api/pyplot_api.html"
                }
            ]
        },
        {
            "title": "Covid-19 Symptoms Monitoring Android App",
            "description": "<strong>Android app for Covid-19 symptoms monitoring and contact tracing. Intuitive UI for the users to measure heart rate, respiration rate, and log Covid-19 symptoms.</strong>",
            "ulist": [
                "Developed heart rate measurement feature based on user finger-tip video",
                "Developed respiration rate measurement feature based on gyroscope sensor data",
                "Developed intuitive UI with inline help features so that the app can be used without much learning curve",
                "Used SQLite to locally store all collected Covid-19 signs and symptoms",
                "Developed Python Flask based server and connected the app to upload the signs and symptoms data to remote server",
                "Simulated contact tracing feature in the server end where all users data can be uploaded and analyzed"
            ],
            "timeline": "Fall 20",
            "technologies": [
                {
                    "title": "Android API",
                    "url": "https://developer.android.com/reference"
                },
                {
                    "title": "Android Studio",
                    "url": "https://developer.android.com/studio"
                },
                {
                    "title": "Android OpenCV",
                    "url": "https://opencv.org/android/"
                },
                {
                    "title": "Android SQLite",
                    "url": "https://developer.android.com/training/data-storage/sqlite"
                },
                {
                    "title": "Python Flask",
                    "url": "https://flask.palletsprojects.com/en/1.1.x/"
                },
                {
                    "title": "REST API",
                    "url": "https://en.wikipedia.org/wiki/Representational_state_transfer"
                }
            ]
        },
        {
            "title": "Disease Search By Symptoms - Healthcare Websites Mining",
            "description": "<strong>A complete end-end to applications which allows users to Search disease by typing one or more symptoms in the search box. It also allows users find effective drug for discovered disease.</strong>",
            "ulist": [
                "Developed web crawlers to scrap structured data from healthcare discussion forums and drug reviews websites",
                "Created Java web application and REST API endpoints for data indexing and searching",
                "Improved search accuracy by more than 9% by incorporating information extraction technique (NER) and Bio-medical synonyms",
                "Collaborated with other team members to successfully deliver project milestones on time"
            ],
            "timeline": "Spring 20",
            "technologies": [
                {
                    "title": "Java",
                    "url": "https://www.java.com/en/"
                },
                {
                    "title": "Java Servlet",
                    "url": "https://en.wikipedia.org/wiki/Jakarta_Servlet"
                },
                {
                    "title": "Apache Solr",
                    "url": "https://lucene.apache.org/solr/"
                },
                {
                    "title": "UMLS MetaMap",
                    "url": "https://metamap.nlm.nih.gov/"
                },
                {
                    "title": "Python",
                    "url": "https://www.python.org/"
                },
                {
                    "title": "Scrapy",
                    "url": "https://scrapy.org/"
                },
                {
                    "title": "REST API",
                    "url": "https://en.wikipedia.org/wiki/Representational_state_transfer"
                },
                {
                    "title": "Node.js",
                    "url": "https://nodejs.org/en/"
                },
                {
                    "title": "PhantomJS",
                    "url": "https://phantomjs.org/"
                }
            ]
        },
        {
            "title": "Bigtable Database Implementation Using Relational DBMS",
            "description": "<strong>Single-node <a href='https://en.wikipedia.org/wiki/Bigtable'>Bigtable</a> implementation by using Relational DBMS components as building blocks.</strong>",
            "ulist": [
                "Extended Minibase persistent Heapfile and Tuple data structures to implement Bigtable maps",
                "Leveraged in-memory data structures to optimize batch insertion and minimized disk-page access significantly",
                "Optimized Heapfile page layout and B+ Tree index structure to support flexible data clustering and querying"
            ],
            "timeline": "Spring 20",
            "technologies": [
                {
                    "title": "Java",
                    "url": "https://www.java.com/en/"
                },
                {
                    "title": "Minibase",
                    "url": "https://research.cs.wisc.edu/coral/mini_doc/minibase.html"
                }
            ]
        },
        {
            "title": "Multimedia Information Retrieval System",
            "description": "<strong>A Supervised Machine Learning project using the <a href='https://sites.google.com/view/11khands'>11k Hands</a> dataset.</strong>",
            "ulist": [
                "Implemented image feature extraction, mapped images to multi-dimensional vector space for image similarity computation",
                "Improved image search performance by 30% by implementing Dimensionality Reduction techniques",
                "Implemented relevance feedback using Personalized Page Rank in the image retrieval system"
            ],
            "timeline": "Fall 19",
            "technologies": [
                {
                    "title": "Python",
                    "url": "https://www.python.org/"
                },
                {
                    "title": "Pandas",
                    "url": "https://pandas.pydata.org/"
                },
                {
                    "title": "scikit-learn",
                    "url": "https://scikit-learn.org/stable/"
                },
                {
                    "title": "matplotlib",
                    "url": "https://matplotlib.org/api/pyplot_api.html"
                }
            ]
        }
    ]
}